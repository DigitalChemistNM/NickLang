
type token = 
  | TO
  | SOLVENT
  | SOLUTION
  | SEMICOLON
  | RPAREN
  | RBRACE
  | PROTOCOL
  | PRINT
  | PEPTIDE
  | PEPID of (
# 9 "bin/parser.mly"
       (string)
# 16 "bin/parser__mock.ml.mock"
)
  | NUMERAL of (
# 7 "bin/parser.mly"
       (int)
# 21 "bin/parser__mock.ml.mock"
)
  | MOLID of (
# 10 "bin/parser.mly"
       (string)
# 26 "bin/parser__mock.ml.mock"
)
  | MOLECULE
  | MM
  | MINUTES
  | LT
  | LPAREN
  | LOCATION
  | LBRACE
  | IN
  | ID of (
# 8 "bin/parser.mly"
       (string)
# 39 "bin/parser__mock.ml.mock"
)
  | GT
  | GENERATE_SMILES
  | FOR
  | FLOAT of (
# 6 "bin/parser.mly"
       (float)
# 47 "bin/parser__mock.ml.mock"
)
  | FIND
  | EQUAL
  | EOF
  | DISPENSE
  | CONTAINS
  | COMBINE
  | CALL
  | CALCULATE_AVERAGE_MASS
  | AT
  | AND
  | AGITATE

# 2 "bin/parser.mly"
  
  open Types

# 65 "bin/parser__mock.ml.mock"

let menhir_begin_marker =
  0

and (xv_toplevel, xv_expression, xv_arglist) =
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 55 "bin/parser.mly"
                        _2
# 74 "bin/parser__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 55 "bin/parser.mly"
          e
# 78 "bin/parser__mock.ml.mock"
   : 'tv_expression) (_startpos_e_ : Lexing.position) (_endpos_e_ : Lexing.position) (_startofs_e_ : int) (_endofs_e_ : int) (_loc_e_ : Lexing.position * Lexing.position) : (
# 49 "bin/parser.mly"
      (Types.expression)
# 82 "bin/parser__mock.ml.mock"
  ) ->
    (
# 56 "bin/parser.mly"
  ( e )
# 87 "bin/parser__mock.ml.mock"
     : 'tv_toplevel) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 82 "bin/parser.mly"
                                              var2
# 92 "bin/parser__mock.ml.mock"
   : (
# 7 "bin/parser.mly"
       (int)
# 96 "bin/parser__mock.ml.mock"
  )) (_startpos_var2_ : Lexing.position) (_endpos_var2_ : Lexing.position) (_startofs_var2_ : int) (_endofs_var2_ : int) (_loc_var2_ : Lexing.position * Lexing.position) (
# 82 "bin/parser.mly"
                                    _5
# 100 "bin/parser__mock.ml.mock"
   : unit) (_startpos__5_ : Lexing.position) (_endpos__5_ : Lexing.position) (_startofs__5_ : int) (_endofs__5_ : int) (_loc__5_ : Lexing.position * Lexing.position) (
# 82 "bin/parser.mly"
                                 _4
# 104 "bin/parser__mock.ml.mock"
   : unit) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 82 "bin/parser.mly"
                    var
# 108 "bin/parser__mock.ml.mock"
   : (
# 7 "bin/parser.mly"
       (int)
# 112 "bin/parser__mock.ml.mock"
  )) (_startpos_var_ : Lexing.position) (_endpos_var_ : Lexing.position) (_startofs_var_ : int) (_endofs_var_ : int) (_loc_var_ : Lexing.position * Lexing.position) (
# 82 "bin/parser.mly"
          _2
# 116 "bin/parser__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 82 "bin/parser.mly"
 _1
# 120 "bin/parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) : 'tv_expression ->
    
# 82 "bin/parser.mly"
                                                            (Dispense(var,var2))
# 125 "bin/parser__mock.ml.mock"
     in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 81 "bin/parser.mly"
                                  var2
# 130 "bin/parser__mock.ml.mock"
   : (
# 8 "bin/parser.mly"
       (string)
# 134 "bin/parser__mock.ml.mock"
  )) (_startpos_var2_ : Lexing.position) (_endpos_var2_ : Lexing.position) (_startofs_var2_ : int) (_endofs_var2_ : int) (_loc_var2_ : Lexing.position * Lexing.position) (
# 81 "bin/parser.mly"
                        _3
# 138 "bin/parser__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 81 "bin/parser.mly"
           var
# 142 "bin/parser__mock.ml.mock"
   : (
# 7 "bin/parser.mly"
       (int)
# 146 "bin/parser__mock.ml.mock"
  )) (_startpos_var_ : Lexing.position) (_endpos_var_ : Lexing.position) (_startofs_var_ : int) (_endofs_var_ : int) (_loc_var_ : Lexing.position * Lexing.position) (
# 81 "bin/parser.mly"
 _1
# 150 "bin/parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) : 'tv_expression ->
    
# 81 "bin/parser.mly"
                                           (Contains(var, var2))
# 155 "bin/parser__mock.ml.mock"
     in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 80 "bin/parser.mly"
           var
# 160 "bin/parser__mock.ml.mock"
   : (
# 7 "bin/parser.mly"
       (int)
# 164 "bin/parser__mock.ml.mock"
  )) (_startpos_var_ : Lexing.position) (_endpos_var_ : Lexing.position) (_startofs_var_ : int) (_endofs_var_ : int) (_loc_var_ : Lexing.position * Lexing.position) (
# 80 "bin/parser.mly"
 _1
# 168 "bin/parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) : 'tv_expression ->
    
# 80 "bin/parser.mly"
                        (Location(var))
# 173 "bin/parser__mock.ml.mock"
     in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 79 "bin/parser.mly"
       var
# 178 "bin/parser__mock.ml.mock"
   : (
# 8 "bin/parser.mly"
       (string)
# 182 "bin/parser__mock.ml.mock"
  )) (_startpos_var_ : Lexing.position) (_endpos_var_ : Lexing.position) (_startofs_var_ : int) (_endofs_var_ : int) (_loc_var_ : Lexing.position * Lexing.position) (
# 79 "bin/parser.mly"
 _1
# 186 "bin/parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) : 'tv_expression ->
    
# 79 "bin/parser.mly"
                (Call(var))
# 191 "bin/parser__mock.ml.mock"
     in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 78 "bin/parser.mly"
 _1
# 196 "bin/parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) : 'tv_expression ->
    
# 78 "bin/parser.mly"
        (Print)
# 201 "bin/parser__mock.ml.mock"
     in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 77 "bin/parser.mly"
                                     _5
# 206 "bin/parser__mock.ml.mock"
   : unit) (_startpos__5_ : Lexing.position) (_endpos__5_ : Lexing.position) (_startofs__5_ : int) (_endofs__5_ : int) (_loc__5_ : Lexing.position * Lexing.position) (
# 77 "bin/parser.mly"
                       var2
# 210 "bin/parser__mock.ml.mock"
   : (
# 7 "bin/parser.mly"
       (int)
# 214 "bin/parser__mock.ml.mock"
  )) (_startpos_var2_ : Lexing.position) (_endpos_var2_ : Lexing.position) (_startofs_var2_ : int) (_endofs_var2_ : int) (_loc_var2_ : Lexing.position * Lexing.position) (
# 77 "bin/parser.mly"
                  _3
# 218 "bin/parser__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 77 "bin/parser.mly"
          var
# 222 "bin/parser__mock.ml.mock"
   : (
# 8 "bin/parser.mly"
       (string)
# 226 "bin/parser__mock.ml.mock"
  )) (_startpos_var_ : Lexing.position) (_endpos_var_ : Lexing.position) (_startofs_var_ : int) (_endofs_var_ : int) (_loc_var_ : Lexing.position * Lexing.position) (
# 77 "bin/parser.mly"
 _1
# 230 "bin/parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) : 'tv_expression ->
    
# 77 "bin/parser.mly"
                                              (Agitate(var, var2))
# 235 "bin/parser__mock.ml.mock"
     in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 76 "bin/parser.mly"
                                    var3
# 240 "bin/parser__mock.ml.mock"
   : (
# 8 "bin/parser.mly"
       (string)
# 244 "bin/parser__mock.ml.mock"
  )) (_startpos_var3_ : Lexing.position) (_endpos_var3_ : Lexing.position) (_startofs_var3_ : int) (_endofs_var3_ : int) (_loc_var3_ : Lexing.position * Lexing.position) (
# 76 "bin/parser.mly"
                                _5
# 248 "bin/parser__mock.ml.mock"
   : unit) (_startpos__5_ : Lexing.position) (_endpos__5_ : Lexing.position) (_startofs__5_ : int) (_endofs__5_ : int) (_loc__5_ : Lexing.position * Lexing.position) (
# 76 "bin/parser.mly"
                       var2
# 252 "bin/parser__mock.ml.mock"
   : (
# 8 "bin/parser.mly"
       (string)
# 256 "bin/parser__mock.ml.mock"
  )) (_startpos_var2_ : Lexing.position) (_endpos_var2_ : Lexing.position) (_startofs_var2_ : int) (_endofs_var2_ : int) (_loc_var2_ : Lexing.position * Lexing.position) (
# 76 "bin/parser.mly"
                  _3
# 260 "bin/parser__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 76 "bin/parser.mly"
          var
# 264 "bin/parser__mock.ml.mock"
   : (
# 8 "bin/parser.mly"
       (string)
# 268 "bin/parser__mock.ml.mock"
  )) (_startpos_var_ : Lexing.position) (_endpos_var_ : Lexing.position) (_startofs_var_ : int) (_endofs_var_ : int) (_loc_var_ : Lexing.position * Lexing.position) (
# 76 "bin/parser.mly"
 _1
# 272 "bin/parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) : 'tv_expression ->
    
# 76 "bin/parser.mly"
                                              (Combine(var, var2, var3))
# 277 "bin/parser__mock.ml.mock"
     in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 75 "bin/parser.mly"
                     _4
# 282 "bin/parser__mock.ml.mock"
   : unit) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 75 "bin/parser.mly"
                _3
# 286 "bin/parser__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 75 "bin/parser.mly"
          _2
# 290 "bin/parser__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 75 "bin/parser.mly"
  var
# 294 "bin/parser__mock.ml.mock"
   : (
# 8 "bin/parser.mly"
       (string)
# 298 "bin/parser__mock.ml.mock"
  )) (_startpos_var_ : Lexing.position) (_endpos_var_ : Lexing.position) (_startofs_var_ : int) (_endofs_var_ : int) (_loc_var_ : Lexing.position * Lexing.position) : 'tv_expression ->
    
# 75 "bin/parser.mly"
                               (FindLocation(var))
# 303 "bin/parser__mock.ml.mock"
     in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 74 "bin/parser.mly"
                                                           _6
# 308 "bin/parser__mock.ml.mock"
   : unit) (_startpos__6_ : Lexing.position) (_endpos__6_ : Lexing.position) (_startofs__6_ : int) (_endofs__6_ : int) (_loc__6_ : Lexing.position * Lexing.position) (
# 74 "bin/parser.mly"
                                          body
# 312 "bin/parser__mock.ml.mock"
   : 'tv_expression) (_startpos_body_ : Lexing.position) (_endpos_body_ : Lexing.position) (_startofs_body_ : int) (_endofs_body_ : int) (_loc_body_ : Lexing.position * Lexing.position) (
# 74 "bin/parser.mly"
                                  _4
# 316 "bin/parser__mock.ml.mock"
   : unit) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 74 "bin/parser.mly"
                    args
# 320 "bin/parser__mock.ml.mock"
   : 'tv_arglist) (_startpos_args_ : Lexing.position) (_endpos_args_ : Lexing.position) (_startofs_args_ : int) (_endofs_args_ : int) (_loc_args_ : Lexing.position * Lexing.position) (
# 74 "bin/parser.mly"
           var
# 324 "bin/parser__mock.ml.mock"
   : (
# 8 "bin/parser.mly"
       (string)
# 328 "bin/parser__mock.ml.mock"
  )) (_startpos_var_ : Lexing.position) (_endpos_var_ : Lexing.position) (_startofs_var_ : int) (_endofs_var_ : int) (_loc_var_ : Lexing.position * Lexing.position) (
# 74 "bin/parser.mly"
 _1
# 332 "bin/parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) : 'tv_expression ->
    
# 74 "bin/parser.mly"
                                                                     (Protocol (var, args, body))
# 337 "bin/parser__mock.ml.mock"
     in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 73 "bin/parser.mly"
                                _4
# 342 "bin/parser__mock.ml.mock"
   : unit) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 73 "bin/parser.mly"
                     var
# 346 "bin/parser__mock.ml.mock"
   : (
# 9 "bin/parser.mly"
       (string)
# 350 "bin/parser__mock.ml.mock"
  )) (_startpos_var_ : Lexing.position) (_endpos_var_ : Lexing.position) (_startofs_var_ : int) (_endofs_var_ : int) (_loc_var_ : Lexing.position * Lexing.position) (
# 73 "bin/parser.mly"
                 _2
# 354 "bin/parser__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 73 "bin/parser.mly"
 _1
# 358 "bin/parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) : 'tv_expression ->
    
# 73 "bin/parser.mly"
                                    (GenerateSmiles (var))
# 363 "bin/parser__mock.ml.mock"
     in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 72 "bin/parser.mly"
                                       _4
# 368 "bin/parser__mock.ml.mock"
   : unit) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 72 "bin/parser.mly"
                            var
# 372 "bin/parser__mock.ml.mock"
   : (
# 9 "bin/parser.mly"
       (string)
# 376 "bin/parser__mock.ml.mock"
  )) (_startpos_var_ : Lexing.position) (_endpos_var_ : Lexing.position) (_startofs_var_ : int) (_endofs_var_ : int) (_loc_var_ : Lexing.position * Lexing.position) (
# 72 "bin/parser.mly"
                        _2
# 380 "bin/parser__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 72 "bin/parser.mly"
 _1
# 384 "bin/parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) : 'tv_expression ->
    
# 72 "bin/parser.mly"
                                           (CalculateAverageMass (var))
# 389 "bin/parser__mock.ml.mock"
     in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 71 "bin/parser.mly"
                                                                     var4
# 394 "bin/parser__mock.ml.mock"
   : (
# 8 "bin/parser.mly"
       (string)
# 398 "bin/parser__mock.ml.mock"
  )) (_startpos_var4_ : Lexing.position) (_endpos_var4_ : Lexing.position) (_startofs_var4_ : int) (_endofs_var4_ : int) (_loc_var4_ : Lexing.position * Lexing.position) (
# 71 "bin/parser.mly"
                                                                 _9
# 402 "bin/parser__mock.ml.mock"
   : unit) (_startpos__9_ : Lexing.position) (_endpos__9_ : Lexing.position) (_startofs__9_ : int) (_endofs__9_ : int) (_loc__9_ : Lexing.position * Lexing.position) (
# 71 "bin/parser.mly"
                                                          _8
# 406 "bin/parser__mock.ml.mock"
   : unit) (_startpos__8_ : Lexing.position) (_endpos__8_ : Lexing.position) (_startofs__8_ : int) (_endofs__8_ : int) (_loc__8_ : Lexing.position * Lexing.position) (
# 71 "bin/parser.mly"
                                                       _7
# 410 "bin/parser__mock.ml.mock"
   : unit) (_startpos__7_ : Lexing.position) (_endpos__7_ : Lexing.position) (_startofs__7_ : int) (_endofs__7_ : int) (_loc__7_ : Lexing.position * Lexing.position) (
# 71 "bin/parser.mly"
                                           var3
# 414 "bin/parser__mock.ml.mock"
   : (
# 6 "bin/parser.mly"
       (float)
# 418 "bin/parser__mock.ml.mock"
  )) (_startpos_var3_ : Lexing.position) (_endpos_var3_ : Lexing.position) (_startofs_var3_ : int) (_endofs_var3_ : int) (_loc_var3_ : Lexing.position * Lexing.position) (
# 71 "bin/parser.mly"
                                   _5
# 422 "bin/parser__mock.ml.mock"
   : unit) (_startpos__5_ : Lexing.position) (_endpos__5_ : Lexing.position) (_startofs__5_ : int) (_endofs__5_ : int) (_loc__5_ : Lexing.position * Lexing.position) (
# 71 "bin/parser.mly"
                          var2
# 426 "bin/parser__mock.ml.mock"
   : (
# 8 "bin/parser.mly"
       (string)
# 430 "bin/parser__mock.ml.mock"
  )) (_startpos_var2_ : Lexing.position) (_endpos_var2_ : Lexing.position) (_startofs_var2_ : int) (_endofs_var2_ : int) (_loc_var2_ : Lexing.position * Lexing.position) (
# 71 "bin/parser.mly"
                   _3
# 434 "bin/parser__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 71 "bin/parser.mly"
           var
# 438 "bin/parser__mock.ml.mock"
   : (
# 8 "bin/parser.mly"
       (string)
# 442 "bin/parser__mock.ml.mock"
  )) (_startpos_var_ : Lexing.position) (_endpos_var_ : Lexing.position) (_startofs_var_ : int) (_endofs_var_ : int) (_loc_var_ : Lexing.position * Lexing.position) (
# 71 "bin/parser.mly"
 _1
# 446 "bin/parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) : 'tv_expression ->
    
# 71 "bin/parser.mly"
                                                                               (Solution (var, var2, var3, var4))
# 451 "bin/parser__mock.ml.mock"
     in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 70 "bin/parser.mly"
          var
# 456 "bin/parser__mock.ml.mock"
   : (
# 8 "bin/parser.mly"
       (string)
# 460 "bin/parser__mock.ml.mock"
  )) (_startpos_var_ : Lexing.position) (_endpos_var_ : Lexing.position) (_startofs_var_ : int) (_endofs_var_ : int) (_loc_var_ : Lexing.position * Lexing.position) (
# 70 "bin/parser.mly"
 _1
# 464 "bin/parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) : 'tv_expression ->
    
# 70 "bin/parser.mly"
                   (Solvent var)
# 469 "bin/parser__mock.ml.mock"
     in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 69 "bin/parser.mly"
                                             _6
# 474 "bin/parser__mock.ml.mock"
   : unit) (_startpos__6_ : Lexing.position) (_endpos__6_ : Lexing.position) (_startofs__6_ : int) (_endofs__6_ : int) (_loc__6_ : Lexing.position * Lexing.position) (
# 69 "bin/parser.mly"
                                 var2
# 478 "bin/parser__mock.ml.mock"
   : (
# 10 "bin/parser.mly"
       (string)
# 482 "bin/parser__mock.ml.mock"
  )) (_startpos_var2_ : Lexing.position) (_endpos_var2_ : Lexing.position) (_startofs_var2_ : int) (_endofs_var2_ : int) (_loc_var2_ : Lexing.position * Lexing.position) (
# 69 "bin/parser.mly"
                         _4
# 486 "bin/parser__mock.ml.mock"
   : unit) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 69 "bin/parser.mly"
                   _3
# 490 "bin/parser__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 69 "bin/parser.mly"
           var
# 494 "bin/parser__mock.ml.mock"
   : (
# 8 "bin/parser.mly"
       (string)
# 498 "bin/parser__mock.ml.mock"
  )) (_startpos_var_ : Lexing.position) (_endpos_var_ : Lexing.position) (_startofs_var_ : int) (_endofs_var_ : int) (_loc_var_ : Lexing.position * Lexing.position) (
# 69 "bin/parser.mly"
 _1
# 502 "bin/parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) : 'tv_expression ->
    
# 69 "bin/parser.mly"
                                                     (Molecule (var, var2))
# 507 "bin/parser__mock.ml.mock"
     in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 68 "bin/parser.mly"
                                        _6
# 512 "bin/parser__mock.ml.mock"
   : unit) (_startpos__6_ : Lexing.position) (_endpos__6_ : Lexing.position) (_startofs__6_ : int) (_endofs__6_ : int) (_loc__6_ : Lexing.position * Lexing.position) (
# 68 "bin/parser.mly"
                            var2
# 516 "bin/parser__mock.ml.mock"
   : (
# 9 "bin/parser.mly"
       (string)
# 520 "bin/parser__mock.ml.mock"
  )) (_startpos_var2_ : Lexing.position) (_endpos_var2_ : Lexing.position) (_startofs_var2_ : int) (_endofs_var2_ : int) (_loc_var2_ : Lexing.position * Lexing.position) (
# 68 "bin/parser.mly"
                        _4
# 524 "bin/parser__mock.ml.mock"
   : unit) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 68 "bin/parser.mly"
                  _3
# 528 "bin/parser__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 68 "bin/parser.mly"
          var
# 532 "bin/parser__mock.ml.mock"
   : (
# 8 "bin/parser.mly"
       (string)
# 536 "bin/parser__mock.ml.mock"
  )) (_startpos_var_ : Lexing.position) (_endpos_var_ : Lexing.position) (_startofs_var_ : int) (_endofs_var_ : int) (_loc_var_ : Lexing.position * Lexing.position) (
# 68 "bin/parser.mly"
 _1
# 540 "bin/parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) : 'tv_expression ->
    
# 68 "bin/parser.mly"
                                            (Peptide (var, var2))
# 545 "bin/parser__mock.ml.mock"
     in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 67 "bin/parser.mly"
                            e2
# 550 "bin/parser__mock.ml.mock"
   : 'tv_expression) (_startpos_e2_ : Lexing.position) (_endpos_e2_ : Lexing.position) (_startofs_e2_ : int) (_endofs_e2_ : int) (_loc_e2_ : Lexing.position * Lexing.position) (
# 67 "bin/parser.mly"
                 _2
# 554 "bin/parser__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 67 "bin/parser.mly"
  e1
# 558 "bin/parser__mock.ml.mock"
   : 'tv_expression) (_startpos_e1_ : Lexing.position) (_endpos_e1_ : Lexing.position) (_startofs_e1_ : int) (_endofs_e1_ : int) (_loc_e1_ : Lexing.position * Lexing.position) : 'tv_expression ->
    
# 67 "bin/parser.mly"
                                            (Sequence (e1, e2))
# 563 "bin/parser__mock.ml.mock"
     in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) : 'tv_arglist ->
    
# 61 "bin/parser.mly"
   ( EmptyArglist )
# 569 "bin/parser__mock.ml.mock"
     in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 60 "bin/parser.mly"
           rest
# 574 "bin/parser__mock.ml.mock"
   : 'tv_arglist) (_startpos_rest_ : Lexing.position) (_endpos_rest_ : Lexing.position) (_startofs_rest_ : int) (_endofs_rest_ : int) (_loc_rest_ : Lexing.position * Lexing.position) (
# 60 "bin/parser.mly"
  var
# 578 "bin/parser__mock.ml.mock"
   : (
# 8 "bin/parser.mly"
       (string)
# 582 "bin/parser__mock.ml.mock"
  )) (_startpos_var_ : Lexing.position) (_endpos_var_ : Lexing.position) (_startofs_var_ : int) (_endofs_var_ : int) (_loc_var_ : Lexing.position * Lexing.position) : 'tv_arglist ->
    
# 60 "bin/parser.mly"
                          (Arglist(var, rest))
# 587 "bin/parser__mock.ml.mock"
     in
  ((let rec diverge() = diverge() in diverge()) : 'tv_toplevel * 'tv_expression * 'tv_arglist)

and menhir_end_marker =
  0
